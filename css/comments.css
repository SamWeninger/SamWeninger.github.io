/* css is a set of rules which target certain tags or #ids or classes, etc. */
/* classes can be used multiple times per page, tags only to be used once per page --unique
 * SELECTOR: {DECLARATION} 
 * #id p {declaration}  -> all paragraph tags with id 'id' styled this way
 * .class div {declaration} -> all div tags in 'class' classes styled this way 
 * DECLARATION = 
 *  property_name: value_name; -> elements in declaration
*/

/* CSS WORKS FROM TOP TO BOTTOM, overrides 
 * HOWEVER, specificity ovverides cascades:
 * id = 100 pts
 * class = 10 pts
 * element = 1 pt 
 */

 /* IMPORTANT RULE: trumps all other rules
  * !important
  * property_name: value_name !important;
  */

/*
 * DESCENDANTS:
 * #parent #child <tag>{...}
 * targets id 'child' within id 'parent'
 * child and parent ids refer to embedded div tags?
 * #parent > <tag>{...}
 * > == child-combinator / 'direct' --> only tags directly under parent targeted, no children tags targeted
*/

/*
 * ADJACENTS:
 * #id h1 + p {...}
 * targets p tags immediately following h1 tags in 'id'
 */

/*
 * ATTRIBUTE SELECTOR:
 * <tag>[<attribute>]
 * <tag>[<attribute> = 'value'] eg. h1[title = "my title"]
 *                 '~=' -> includes pattern matches with spaces after etc.,
 *                 '$=' -> includes pattern matches that END in the same way
 *                 '^=' -> includes pattern matches that BEGINS same way
 * targets all tags ('tag') with an 'attribute' associated with it
 */

/*
 * PSEUDO-CLASS:
 * Behavioral and structural extensions
 * <class/tag> : <property>{...}
 * selector:keyword {declaration}
 * applies 'property' to tag/class
 *
 * EG. (common)
 * 'hover', 'active', 'visited'
 *
 * :first-child, :last-child
 * targets first and last, respectively, elements in group
 * e.g. div a:first-child {} -> targets first ELEMENT in div 
 * :nth-child(n) -> targets nth element
 * :nth-child(even/odd/<formula, eg. 2n+1>)
 * 
 * :first-of-type, :last-of-type
 * targets first and last elements of type selected
 * :nth-of-type(n) -> targets nth element
 * :nth-of-type(even/odd/<formula, eg. 2n+1>)
 */

/* COMBINING SELECTORS
* e.g. <tag>.<class> {...}
*/

/* UNIVERSAL SELECTOR
 * " * {...} "
 * TARGETS every element in page, not inheritance
 */

 /* FONT-SIZE
  * absolute: pixels (px)
  * relative: 
  *    em -> takes base font-size, multiplies by #em
  *    n% -> % of base font-size
  *
  * FONT-FAMILY
  * font-family: [font-stack]
  * list of fonts, used in order (if font 1 not installed, font 2 applied, etc.)
  *
  * TEXT-DECORATION
  * inherit (useful to override default browser styles), 
  * line-through, overline, underline, etc.
  *
  * FONT-WEIGHT
  * lighter, normal, bolder, ###, etc.
  *
  * TEXT-TRANSFORM
  * capitalize, uppercase, lowercase, etc.  
  *
  * COLOR
  * color: -> foreground (text)
  *    <name>, #XXXXXX
  * background-color: (background/highlight)
  * background: url(); <- add background image
  *
  * letter-spacing:
  * px, em, %  
  * em -> inherits font-size as param
  *
  * word-spacing:
  * px, em, %
  * em -> inherits font-size as param
  *
  * line-height:  -> height of line + space
  * px, em, % 
  * em -> inherits font-size as param, should be > 1
  *
  * margin-bottom: -> spacing at bottom of paragraph
  */

  /* BOX MODEL
   * margin        -> orange
   *   - vertical margins collapse (the higher of two margins wins/ becomes margin between 2 elems)
   *   - margins: top right bottom left (specifiy margins clockwise from top, 4 values)
   *   - margins: top/bottom right/left (2 values)
   *   - margins: top left/right bottom (3 values)
   *   - "auto" -> keyword for automatic margins to center box between others/boundaries
   *   - responsive design, i.e. shifting weppage dimensions, use % or auto for margins/width/padding
   * 
   * border        -> 
   *    - width, style, color
   *    eg.
   *       border-top-(width/style/color): 
   *       border-top: <width> <style> <color>
   *       border: ... ;
   *
   * padding       -> green
   *   - same margin rules apply to padding, exc. 'auto'
   *   - (padding/margin)-(top/bottom/left/right) = ... ; -> specify specific side
   *
   * width/height  -> blue
   *   - px
   *   - % -> percentage w/h of parent element, good for shifting screen size
   *
   * IN-LINE elements -> have no vertical spacing
   *   - workaround => 
   *        display: block
   *        display: inline-block (merge inline and block properties together)
   *
   * ROUNDED CORNERS:
   *   -> border-radius: #px
   *           top-left top-right bottom-right bottom-left
   *
   *   -> perfect circle: border-radius: 50% of width/height
   *   -> higher the value, rounder the curve
   *
   * COLOR:
   *   -> #000000
   *       R G B
   *   -> rgb(0-255, 0-255, 0-255, <alpha channel opacity (optional param)>)
   *
   * OPACITY:
   *   -> opacity: <0(transparent) - 1(opaque)>
   */

  /* Browser specs:
   * caniuse.com -> browser compatibility
   *
   * pleeease.io/play -> converts base css to css for full browser compatibility
   */




/***************************************/





   /* OLD MAIN.CSS */

   /* header 1 */
h1{
    /* position: absolute;
    top: 0;
    left: 0; */
    color: red !important;
    font-size: 33px;
    text-decoration: underlined;
    text-transform: uppercase;
}

#header h1{
    color: yellow;
    font-size: 64px;
}

#my_only_span{
    color: springgreen;
}

/* p tags */
p{
    font-size: 18px;
    color: blue;
}

#written_content > p{
    color: yellowgreen;
    font-size: 24px;
}

/* default browser styles override inheritance */
/* a{
    text-decoration: underline;
    color: orange;
} */

span{
    text-transform: uppercase;
}

span[class~="my_class"]{
    color: teal;
}

span{
    width: 100%;
    /* color: red; */
    background-color: slategrey;
}

.my_class{
    color: tomato;
}

a:hover{
    color: red;
}

a:active{
    color: orange;
}

/* a:visited{
    color: purple;
} */

.box{
    margin: 30px auto;
    border: 2px solid red;
    padding: 5px 0px;
    text-align: center;
    width: 100px;
    height: 100px;
    line-height: 100px;
    border-radius: 10px;
    /* Background-image: url("../img/Flowers.jpg"), url("../img/Baseball.jpg"); */
    background: #aadddd;
    background: -moz-linear-gradient(top, #aadddd 0%, #40d8d8 100%); /*mozilla/firefox*/
    background: -webkit-linear-gradient(top, #aadddd 0%, #40d8d8 100%); /*chrome*/
    background: linear-gradient(top, #aadddd 0%, #40d8d8 100%);
    background-size: 100%;
    background-repeat: no-repeat;
    background-position: center;
    opacity: 1;
    box-shadow: 2px 2px 4px 2px rgb(40,40,40,0.6);
    /*          right bottom blurr-radius(low = not blurry) spread(low = spread over low distance) < shadow color>  */
    /* background-image: url(); 
    background-repeat: round/no-repeat;
    background-position: center/ right% top% etc.;
    background-size: px, etc.;
           -or-
    background-image: url() no-repeat top center;  -> add specs in line
    ADD 'background-color' AFTER 'background-image'
    */
}

.box:hover{
    margin: 30px auto;
    border: 2px solid red;
    padding: 5px 0px;
    text-align: center;
    width: 100px;
    height: 100px;
    line-height: 100px;
    border-radius: 10px;
    /* Background-image: url("../img/Flowers.jpg"), url("../img/Baseball.jpg"); */
    background: #aadddd;
    
    /*vendor prefixes: -moz-... etc.*/
    background: -moz-linear-gradient(bottom, #aadddd 0%, #40d8d8 100%); /*mozilla/firefox*/
    background: -webkit-linear-gradient(bottom, #aadddd 0%, #40d8d8 100%); /*chrome*/
    background: linear-gradient(bottom, #aadddd 0%, #40d8d8 100%);
    background-size: 100%;
    background-repeat: no-repeat;
    background-position: center;
    opacity: 1;
    box-shadow: 0px 0px 0px 0px rgb(40,40,40,0.6);
    /* background-image: url(); 
    background-repeat: round/no-repeat;
    background-position: center/ right% top% etc.;
    background-size: px, etc.;
           -or-
    background-image: url() no-repeat top center;  -> add specs in line
    ADD 'background-color' AFTER 'background-image'
    */
}








/* body {
    margin: 60px auto;
    width: 70%;
}
nav ul, footer ul {
    font-family:'Helvetica', 'Arial', 'Sans-Serif';
    padding: 0px;
    list-style: none;
    font-weight: bold;
}
nav ul li, footer ul li {
    display: inline;
    margin-right: 20px;
}
a {
    text-decoration: none;
    color: #999;
}
a:hover {
    text-decoration: underline;
}
h1 {
    font-size: 3em;
    font-family:'Helvetica', 'Arial', 'Sans-Serif';
}
p {
    font-size: 1.5em;
    line-height: 1.4em;
    color: #333;
}
footer {
    border-top: 1px solid #d5d5d5;
    font-size: .8em;
}

ul.posts { 
    margin: 20px auto 40px; 
    font-size: 1.5em;
}

ul.posts li {
    list-style: none;
} */
